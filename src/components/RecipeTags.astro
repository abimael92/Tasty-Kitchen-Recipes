---
const { tags = [] } = Astro.props;

const hasTags = Array.isArray(tags) && tags.length > 0;
const displayTags = hasTags
	? tags
	: ['vegan', 'gluten-free', 'quick', 'dessert'];
---

<div class='tags'>
	{
		displayTags.map((tag) => (
			<span class='tag' key={tag}>
				{tag}
			</span>
		))
	}
</div>

<style>
	.tags {
		margin-bottom: 1rem;
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tags .tag {
		display: inline-block;
		height: 24px;
		line-height: 24px;
		position: relative;
		margin: 0 16px 8px 0;
		padding: 0 10px 0 12px;
		background: var(--color-secondary);
		color: #fff;

		font-size: 20px;
		text-decoration: none;
		font-weight: bold;
		border-top-right-radius: 3px;
		border-bottom-right-radius: 3px;
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
	}

	.tags .tag:before {
		content: '';
		position: absolute;
		top: 0;
		left: -12px;
		width: 0;
		height: 0;
		border-style: solid;
		border-width: 12px 12px 12px 0;
		border-color: transparent var(--color-secondary) transparent transparent;
	}

	.tags .tag:after {
		content: '';
		position: absolute;
		top: 10px;
		left: 1px;
		width: 5px;
		height: 5px;
		border-radius: 50%;
		background: #fff;
		box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.4);
	}

	.tag.fallback {
		font-style: italic;
		color: #fff;
	}
</style>
